data:
  # Rescale outside StarDist
  rescale_factor: Null

  # Training
  training:
    - /g/kreshuk/yu/a.h5
  validation:
    - /g/kreshuk/yu/b.h5
  raw_name: raw
  label_name: label

  # Inference
  prediction:
    - /g/kreshuk/yu/c.h5
  format: hdf5 # only 'hdf5' or 'tiff'
  name: raw # dataset name of the raw image in HDF5 files, only required if format is `hdf5`
  output_dir: /g/kreshuk/yu/datasets/FOR2581/diploid/raw_noisy/stardist_resnet_96_grid244_one_test/
  output_dtype: uint16 # `uint8`, `uint16`, or `float32` are recommended
  resize_to_original: True # output should be of he same shape as input
  target_voxel_size: Null # the desired voxel size to rescale to during inference, null if rescale factor is set
  save_probability_map: True

stardist:
  model_dir: /g/kreshuk/yu/datasets/FOR2581/diploid/models/stardist_limit/
  model_name: stardist_resnet_96_grid244_one_test
  model_type: StarDist3D
  model_config:
    backbone: resnet
    n_rays: 96
    grid: [2, 4, 4]
    use_gpu: False
    n_channel_in: 1
    patch_size: [96, 96, 96] # multiple of 16 preferred
    train_batch_size: 8
    train_n_val_patches: 16
    steps_per_epoch: 100
    epochs: 2

augmenter:
  name: default
